{"version":3,"sources":["components/being-helped/BeingHelped.js","components/being-helped/beingHelpedModal.js","components/being-helped/removeRequestModal.js","components/student-queue/studentHeader.js","components/student-queue/requestQueue.js","components/student-queue/studentQueue.js","components/super-admin/signIn.js","components/super-admin/adminDashboard.js","components/nav-bar/navBar.js","components/side-nav/sideNav.js","main.js","App.js","serviceWorker.js","index.js","images/1.svg"],"names":["BeingHelped","classes","this","props","Paper","className","leftNav","Typography","variant","align","ListItem","list","ListItemAvatar","Avatar","src","userAvatar","ListItemText","component","Component","withStyles","theme","padding","spacing","maxWidth","maxheigth","boxShadow","maxHeight","marginTop","width","height","BeingHelpedModal","Dialog","fullWidth","open","helpStudentModal","aria-labelledby","DialogTitle","root","dialogWrapper","Grid","container","justify","item","xs","sm","text","style","color","fontSize","DialogActions","Button","onClick","helpStudentClose","autoFocus","backgroundColor","minHeight","textAlign","RemoveRequest","removeStudentReqModal","removeStudentReqClose","StudentHeader","Box","raiseBtn","marginRight","requestQueue","rightTopNav","square","rightNav","scrollBar","mt","emptyQueue","EmptyQueue","display","overflowY","borderBottomRightRadius","borderBottomLeftRadius","borderTopRightRadius","borderTopLeftRadius","borderRadius","outline","actionIcon","cursor","queueaction","queueName","justifyContent","alignItems","flexDirection","Student","handleChange","setState","newValue","helpStudent","removeStudentRequest","state","previledge","value","header","main","priv","margin","navHeader","signIn","inputChecker","option","username","password","showSpinner","Container","CssBaseline","paper","avatar","form","onSubmit","login","TextField","marginBottom","required","id","label","error","helperText","InputLabelProps","onBlur","e","target","onChange","name","type","submit","link","makeStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","table","minWidth","HtmlTooltip","tooltip","typography","pxToRem","Tooltip","logout","response","localStorage","removeItem","window","location","href","NavBar","handleDrawerOpen","handleDrawerOpenFn","openLogoutMenu","anchor","currentTarget","closeLogoutMenu","AppBar","position","clsx","colorPrimary","appBarBg","Toolbar","IconButton","aria-label","edge","noWrap","flexGrow","title","Fragment","enterDelay","keepMounted","anchorEl","Boolean","onClose","menuPaper","menuList","direction","wrap","menuGridIcon","menuAvatar","menuGridDetails","email","clientId","render","renderProps","disabled","onLogoutSuccess","onFailure","React","easeOut","fontWeight","paddingBottom","SideNav","handleDrawerClose","handleDrawerCloseFn","withTheme","Drawer","drawerPaper","drawerHeader","Divider","List","map","index","button","key","ListItemIcon","primary","PersistentDrawerLeft","contentShift","App","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.530947aa.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = theme => ({\n    leftNav: {\n        padding: theme.spacing(2, 3),\n        maxWidth: 'auto',\n        maxheigth: '310px',\n        // boxShadow: ' 0px 0px 3px 0px rgba(176,173,176,1)',\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)'\n    },\n    list: {\n        maxHeight: '52px',\n        marginTop: '15px'\n    },\n    userAvatar: {\n        width: 35,\n        height: 35,\n    }\n})\n\nclass BeingHelped extends Component {\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div>\n                <Paper className={classes.leftNav}>\n                    <Typography variant=\"h6\" align=\"center\">\n                        Being helped\n                    </Typography>\n                    <ListItem className={classes.list}>\n                        <ListItemAvatar>\n                            <Avatar src=\"https://lh6.googleusercontent.com/-_OuXadnBbqs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfEr_FE92jf3RrOO98KilrRcrinvw/s96-c/photo.jpg\"\n                                className={classes.userAvatar} />\n                        </ListItemAvatar>\n                        <ListItemText>\n                            <Typography component=\"p\">Juan Abunda</Typography>\n                        </ListItemText>\n                    </ListItem>\n                </Paper>\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(BeingHelped);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nconst styles = theme => ({\n    dialogWrapper: {\n        backgroundColor: '#780aaf',\n        minHeight: '150px',\n    },\n    text: {\n        textAlign: 'center',\n        color: '#fff'\n    },\n})\n\nclass BeingHelpedModal extends Component {\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div>\n                <Dialog\n                    fullWidth\n                    open={this.props.helpStudentModal}\n                    aria-labelledby=\"alert-dialog-title\"\n                >\n                    <DialogTitle classes={{ root: classes.dialogWrapper }}>\n                        <Grid container justify=\"center\">\n                            <Grid item xs={12} sm={12}>\n                                <Typography variant=\"h6\" component=\"h3\" className={classes.text}>\n                                    Being Help...\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={7} className={classes.text}>\n                                <AccountCircle style={{ color: '#fff', fontSize: '60px' }} />\n                                <Typography variant=\"h4\" component=\"h3\">Sid Bercasio</Typography>\n                            </Grid>\n                        </Grid>\n                    </DialogTitle>\n                    \n                    <DialogActions>\n                        <Button color=\"primary\">\n                            Back\n                        </Button>\n                        <Button onClick={this.props.helpStudentClose} color=\"primary\" autoFocus>\n                            Done\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(BeingHelpedModal)","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    dialogWrapper: {\n        backgroundColor: '#780aaf',\n        minHeight: '150px',\n    },\n    text: {\n        textAlign: 'center',\n        color: '#fff'\n    },\n})\n\nclass RemoveRequest extends Component {\n\n    render() {\n\n        return (\n            <div>\n                <Dialog\n                    fullWidth\n                    open={this.props.removeStudentReqModal}\n                    aria-labelledby=\"alert-dialog-title\"\n                >\n                    <DialogTitle style={{ fontSize: '10px' }}>\n                        <Typography> </Typography>\n\n                        {'Remove this Request?'}</DialogTitle>\n\n                    <DialogActions>\n                        <Button onClick={this.props.removeStudentReqClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.props.removeStudentReqClose} color=\"primary\" autoFocus>\n                            Remove\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(RemoveRequest)","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n    raiseBtn: {\n        backgroundColor: '#983cac',\n        '&:hover': {\n            backgroundColor: '#780aaf',\n        }\n    },\n    userAvatar: {\n        width: 56,\n        height: 56,\n        marginRight: 6\n    }\n})\n\nclass StudentHeader extends Component {\n\n    render() {\n        const { classes } = this.props\n        return (\n            <div>\n                <Box item xs={12} sm={12} >\n                    <Typography variant=\"h5\" component=\"h3\" align=\"center\">\n                        Boom Camp Spring 2019\n                        </Typography>\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Avatar src=\"https://lh6.googleusercontent.com/-_OuXadnBbqs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfEr_FE92jf3RrOO98KilrRcrinvw/s96-c/photo.jpg\" className={classes.userAvatar} />\n                        </ListItemAvatar>\n                        <ListItemText>\n                            <Typography variant=\"h6\" component=\"h3\">Marvin Banton</Typography>\n                        </ListItemText>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.raiseBtn}>\n                            Raise hand\n                        </Button>\n\n\n                    </ListItem>\n                </Box>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(StudentHeader)","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar'\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Delete from '@material-ui/icons/Delete';\nimport ThumbsUp from '@material-ui/icons/PanTool';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport EmptyQueue from '../../images/1.svg';\n\nconst styles = theme => ({\n\n    rightNav: {\n        padding: theme.spacing(0, 1),\n        maxWidth: 'auto',\n        minHeight: '530px',\n        maxHeight: '530px',\n        // boxShadow: ' 0px 0px 3px 0px rgba(176,173,176,1)',\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)',\n        overflowY: 'scroll',\n        borderBottomRightRadius: '5px',\n        borderBottomLeftRadius: '5px',\n    },\n    rightTopNav: {\n        padding: theme.spacing(2, 3),\n        maxWidth: 'auto',\n        boxShadow: ' 0px 0px 3px 0px rgba(176,173,176,1)',\n        borderTopRightRadius: '5px',\n        borderTopLeftRadius: '5px',\n    },\n    scrollBar: {\n        '&::-webkit-scrollbar': {\n            width: '0.3em'\n        },\n        '&::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(0,0,0,.1)',\n            borderRadius: '10px',\n            outline: '1px solid slategrey'\n        }\n    },\n    actionIcon: {\n        cursor: 'pointer',\n        color: '#91a1af',\n        fontSize: '19px'\n    },\n    list: {\n        maxHeight: '52px',\n        '&:hover .actionShow': {\n            display: 'inline-block'\n        },\n        '&:hover': {\n            backgroundColor: '#f1f1f1',\n        },\n    },\n    queueaction: {\n        display: 'none',\n    },\n    queueName: {\n        fontSize: '17px'\n    },\n    userAvatar: {\n        width: 35,\n        height: 35,\n    },\n    emptyQueue: {\n        marginTop: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n\n    }\n})\n\nclass requestQueue extends Component {\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div>\n                <Paper className={classes.rightTopNav} square={true} >\n                    <Typography variant=\"h6\" align=\"center\">\n                        Queue Students\n                    </Typography>\n                </Paper>\n                <Paper className={`${classes.rightNav} ${classes.scrollBar}`} square={true}>\n                    <Box item xs={12} sm={8} mt={2}>\n                        <Grid container className={classes.emptyQueue}>\n                            <img src={EmptyQueue} width=\"280\" height=\"250\" />\n                            <Typography variant=\"overline\" display=\"block\">No one needs help...</Typography>\n                        </Grid>\n\n                        {/* <ListItem className={`${classes.list}`}>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://lh6.googleusercontent.com/-_OuXadnBbqs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfEr_FE92jf3RrOO98KilrRcrinvw/s96-c/photo.jpg\"\n                                className={classes.userAvatar} />\n                            </ListItemAvatar>\n                            <ListItemText>\n                                <Typography variant=\"h6\" component=\"h3\" className={classes.queueName}>Marvin Banton</Typography>\n                            </ListItemText>\n\n                            {this.props.priv === 'student'\n\n                                ?\n                                <Tooltip title=\"Cancel Request\" placement=\"top\">\n                                    <IconButton onClick={this.props.removeStudentRequest}>\n                                        <Delete className={classes.actionIcon} />\n                                    </IconButton>\n                                </Tooltip>\n\n                                :\n                                null\n\n                            }\n\n                            {this.props.priv === 'mentor'\n\n                                ?\n                                <div className={`${classes.queueaction} actionShow`}>\n                                    <Tooltip title=\"Help Student\" placement=\"top\">\n                                        <IconButton onClick={this.props.helpStudent}>\n                                            <ThumbsUp className={classes.actionIcon} />\n                                        </IconButton>\n                                    </Tooltip>\n\n                                    <Tooltip title=\"Remove Request\" placement=\"top\">\n                                        <IconButton onClick={this.props.removeStudentRequest}>\n                                            <Delete className={classes.actionIcon} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n\n                                :\n                                null\n\n                            }\n\n                        </ListItem> */}\n                    </Box>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(requestQueue)\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport BeingHelped from '../being-helped/BeingHelped';\nimport BeingHelpedModal from '../being-helped/beingHelpedModal';\nimport RemoveRequest from '../being-helped/removeRequestModal';\nimport StudentHeader from './studentHeader';\nimport RequestQueue from './requestQueue';\n\n\nconst styles = theme => ({\n    root: {\n        height: '100%',\n        maxWidth: '1100px',\n        margin: '0 auto',\n    },\n    header: {\n        padding: theme.spacing(3, 2),\n        marginTop: '30px',\n        maxWidth: '1100px',\n        margin: '0 auto',\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)',\n    },\n    main: {\n        marginTop: '13px',\n    },\n    navHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n\n    }\n\n});\n\nclass Student extends Component {\n    constructor() {\n        super()\n        this.state = {\n            previledge: 'student',\n            value: 0,\n            open: false,\n            helpStudentModal: false,\n            removeStudentReqModal: false\n\n        }\n    }\n    handleChange = () => {\n        this.setState({\n            newValue: 1\n        })\n    }\n\n    helpStudent = () => {\n        this.setState({ helpStudentModal: true })\n    }\n\n    helpStudentClose = () => {\n        this.setState({ helpStudentModal: false })\n    }\n\n    removeStudentRequest = () => {\n        this.setState({ removeStudentReqModal: true })\n    }\n\n    removeStudentReqClose = () => {\n        this.setState({ removeStudentReqModal: false })\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.header}>\n                    <StudentHeader />\n                    {/* <div className={classes.navHeader}>\n                        <Grid item xs={12} sm={4}>\n                            <Tabs\n                                value={this.state.value}\n                                onChange={this.handleChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label=\"Students\" />\n                                <Tab label=\"My Profile\" />\n\n                            </Tabs>\n                        </Grid>\n\n                        <Grid item >\n                            <TextField\n                                id=\"outlined-full-width\"\n                                placeholder=\"Ask for help\"\n                                fullWidth\n                                disabled\n                                className={classes.textField}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                            />\n\n                        </Grid>\n\n                    </div> */}\n                </Paper>\n\n                <Grid container className={classes.main} spacing={1}>\n\n                    <Grid item xs={12} sm={4}>\n                        {this.state.previledge === 'mentor'\n\n                            ?\n                            <div>\n                                <BeingHelpedModal\n                                    helpStudentModal={this.state.helpStudentModal}\n                                    helpStudentClose={this.helpStudentClose}\n                                />\n\n                                <RemoveRequest\n                                    removeStudentReqModal={this.state.removeStudentReqModal}\n                                    removeStudentReqClose={this.removeStudentReqClose}\n                                />\n                            </div>\n\n                            :\n\n                            <BeingHelped />\n                        }\n\n                        {this.state.previledge === 'student'\n\n                            ?\n\n                            <RemoveRequest\n                                removeStudentReqModal={this.state.removeStudentReqModal}\n                                removeStudentReqClose={this.removeStudentReqClose}\n                            />\n\n                            :\n\n                            null\n\n                        }\n                    </Grid>\n\n                    <Grid item xs={12} sm={this.state.previledge === 'mentor' ? 12 : 8}>\n                        <RequestQueue\n                            priv={this.state.previledge}\n                            helpStudentModal={this.state.helpStudentModal}\n                            helpStudentClose={this.helpStudentClose}\n                            helpStudent={this.helpStudent}\n\n                            removeStudentRequest={this.removeStudentRequest}\n                            removeStudentReqModal={this.state.removeStudentReqModal}\n                            removeStudentReqClose={this.removeStudentReqClose}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(Student)","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Person from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst styles = {\n    paper: {\n        marginTop: 80,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: 2,\n        backgroundColor: '#780aaf',\n    },\n    form: {\n        width: '100%',\n        marginTop: 18,\n    },\n    submit: {\n        marginTop: 7,\n        backgroundColor: '#780aaf',\n        '&:hover': {\n            backgroundColor: '#a219e6'\n        }\n    },\n    link: {\n        marginTop: 10,\n    }\n}\n\n\nclass signIn extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: ' ',\n            password: ' ',\n            showSpinner: false\n        }\n    }\n\n\n    inputChecker = (value, option) => {\n        if (option === 'username') {\n            this.setState({\n                username: value,\n            })\n        } else {\n            this.setState({\n                password: value,\n            })\n        }\n    }\n\n    render() {\n\n        const { classes } = this.props\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\" mt={100} >\n\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <Person />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Admin\n                    </Typography>\n                    <form className={classes.form} onSubmit={this.login}>\n                        <TextField\n                            style={{ marginBottom: '-3px' }}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Username\"\n                            error={this.state.username === '' ? true : false}\n                            helperText={this.state.username === '' ? 'Username is required' : ' '}\n                            InputLabelProps={{ required: false }}\n                            onBlur={e => this.inputChecker(e.target.value, 'username')}\n                            onChange={e => this.inputChecker(e.target.value, 'username')}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            error={this.state.password === '' ? true : false}\n                            helperText={this.state.password === '' ? 'Password is required' : ' '}\n                            InputLabelProps={{ required: false }}\n                            onBlur={e => this.inputChecker(e.target.value, 'password')}\n                            onChange={e => this.inputChecker(e.target.value, 'password')}\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(styles)(signIn)\n","import React from 'react';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {\n    makeStyles,\n    useTheme\n} from '@material-ui/core/styles';\n\nimport {\n    Drawer,\n    AppBar,\n    Toolbar,\n    List,\n    CssBaseline,\n    Typography,\n    Divider,\n    IconButton,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Paper,\n    Grid,\n} from '@material-ui/core';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        height: '100%',\n        maxWidth: '900px',\n        margin: '0 auto',\n        marginTop: theme.spacing(20),\n        overflowX: 'auto',\n        boxShadow: ' 0px 0px 3px 0px rgba(176,173,176,1)',\n    },\n    table: {\n        minWidth: 900,\n    },\n}));\n\nexport default function MiniDrawer() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function createData(name, calories, fat, carbs, protein) {\n        return { name, calories, fat, carbs, protein };\n    }\n\n    const rows = [\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n        createData('Eclair', 262, 16.0, 24, 6.0),\n        createData('Cupcake', 305, 3.7, 67, 4.3),\n        createData('Gingerbread', 356, 16.0, 49, 3.9),\n    ];\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Handraiser Admin\n          </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            <main className={classes.content}>\n                <Grid container >\n                    <Grid item xs={12} sm={12}>\n                        <Paper className={classes.Mentortable}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Dessert (100g serving)</TableCell>\n                                        <TableCell align=\"right\">Calories</TableCell>\n                                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {rows.map(row => (\n                                        <TableRow key={row.name}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n\n                    </Grid>\n\n                </Grid>\n\n            </main>\n        </div>\n    );\n}","import React from 'react';\nimport decode from 'jwt-decode';\nimport { GoogleLogout } from 'react-google-login';\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@material-ui/core/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import AuthService from '../../auth/services';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    appBarBg: {\n        backgroundColor: '#983cac'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    avatar: {\n        width: '40px',\n        height: '40px',\n        fontSize: '18px',\n        boxShadow: 'none',\n        cursor: 'pointer',\n    },\n    menuPaper: {\n        marginTop: '2.2%'\n    },\n    menuList: {\n        width: '330px',\n        height: '130px',\n    },\n    menuGridIcon: {\n        padding: '8% 2% 5% 4.6%',\n    },\n    menuAvatar: {\n        width: '80px',\n        height: '80px',\n        fontSize: '40px',\n        boxShadow: 'none',\n    },\n    menuGridDetails: {\n        padding: '5% 1% 0 2%'\n    },\n    name: {\n        fontSize: '15px',\n        fontWeight: 'bold'\n    },\n    email: {\n        paddingBottom: '12%',\n        fontSize: '14px',\n        color: '#676767',\n    }\n});\n\nconst HtmlTooltip = withStyles(theme => ({\n    tooltip: {\n        backgroundColor: '#515457',\n        color: '#aeb0b9',\n        maxWidth: 220,\n        padding: '1% 5% 1% 5%',\n        marginTop: '5px',\n        marginRight: '5px',\n        fontSize: theme.typography.pxToRem(12),\n    },\n}))(Tooltip);\n\nconst logout = (response) => {\n    localStorage.removeItem(\"id_token\");\n    window.location.href = '/login';\n}\n\nclass NavBar extends React.Component {\n    constructor() {\n        super();\n\n        // this.Auth = new AuthService();\n        // this.token = this.Auth.getToken();\n        // this.profile = decode(this.token);\n        // console.log(this.profile);\n\n        this.state = {\n            anchor: null\n        }\n    }\n\n    handleDrawerOpen = () => this.props.handleDrawerOpenFn();\n    openLogoutMenu = (e) => this.setState({ anchor: e.currentTarget })\n    closeLogoutMenu = () => this.setState({ anchor: null });\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: this.props.open,\n                })}\n                classes={{ colorPrimary: classes.appBarBg }}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={this.handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, this.props.open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{ flexGrow: 1 }}>\n                        {this.props.title}\n                    </Typography>\n\n                    <HtmlTooltip\n                        title={\n                            <React.Fragment>\n                                <p>\n                                    <b style={{ fontSize: '13px', color: '#ffffff' }}>Google Account</b><br />\n                                    <b>{'John Doe'}</b><br /> {/*replace src by this.profile.name*/}\n                                    <b>{'john.doe@gmail.com'}</b> {/*replace src by this.profile.email*/}\n                                </p>\n                            </React.Fragment>\n                        }\n                        enterDelay={300}\n                    >\n                        <Avatar src=\"https://lh6.googleusercontent.com/-_OuXadnBbqs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfEr_FE92jf3RrOO98KilrRcrinvw/s96-c/photo.jpg\" className={classes.avatar} onClick={e => this.openLogoutMenu(e)}></Avatar>\n                    </HtmlTooltip>\n\n                    <Menu\n                        id=\"logout-menu\"\n                        keepMounted\n                        anchorEl={this.state.anchor}\n                        open={Boolean(this.state.anchor)}\n                        onClose={this.closeLogoutMenu}\n                        classes={{ paper: classes.menuPaper, list: classes.menuList }}\n                    >\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"flex-start\"\n                            wrap='wrap'\n                        >\n                            <Grid item xs={4} className={classes.menuGridIcon} >\n                                <Avatar src=\"https://lh6.googleusercontent.com/-_OuXadnBbqs/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfEr_FE92jf3RrOO98KilrRcrinvw/s96-c/photo.jpg\" className={classes.menuAvatar}></Avatar> {/*replace src by this.profile.picture*/}\n                            </Grid>\n                            <Grid item xs={8} className={classes.menuGridDetails}>\n                                <div className={classes.name} >{'John Doe'}</div> {/*replace by this.profile.name*/}\n                                <div className={classes.email} >{'john.doe@gmail.com'}</div> {/*replace by this.profile.email*/}\n                                <GoogleLogout\n                                    clientId=\"915213711135-usc11cnn8rudrqqikfe21l246r26uqh8.apps.googleusercontent.com\"\n                                    render={renderProps => (\n                                        <Button variant=\"contained\" style={{ marginLeft: '18%' }} onClick={renderProps.onClick} disabled={renderProps.disabled}>\n                                            Logout\n                    </Button>\n                                    )}\n                                    onLogoutSuccess={logout}\n                                    onFailure={logout}\n                                >\n                                </GoogleLogout>\n                            </Grid>\n                        </Grid>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default withStyles(styles)(NavBar);\n","import React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxShadow: '0 4px 4px 0 rgba(60,64,67,0.302), 0 8px 12px 6px rgba(60,64,67,0.149)',\n    },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }\n});\n\nclass SideNav extends React.Component {\n\n  handleDrawerClose = () => {\n    this.props.handleDrawerCloseFn();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const theme = withTheme;\n\n    return (\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={this.props.open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n             <ChevronLeftIcon /> \n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n    );\n  }\n}\n\nexport default withStyles(styles)(SideNav);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport NavBar from './components/nav-bar/navBar';\nimport SideNav from './components/side-nav/sideNav';\nimport Student from './components/student-queue/studentQueue';\n\nconst styles = theme => ({\n    root: {\n        height: '100%',\n        margin: '0 auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            open: false\n        }\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleDrawerClose = () => {\n        this.setState({ open: false })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <NavBar\n                    open={this.state.open}\n                    title='Handraiser'\n                    handleDrawerOpenFn={this.handleDrawerOpen}\n                />\n\n                <SideNav\n                    open={this.state.open}\n                    handleDrawerCloseFn={this.handleDrawerClose}\n                />\n\n                <main className={clsx(classes.content, { [classes.contentShift]: this.state.open, })}>\n                    <div className={classes.drawerHeader} />\n                    <Student />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(PersistentDrawerLeft);\n","import React, { Component } from 'react';\nimport './App.css';\nimport StudentQueue from './components/student-queue/studentQueue';\nimport Login from './components/super-admin/signIn';\nimport Admin from './components/super-admin/adminDashboard'\nimport Main from './main'\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Main />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.2fb50ca9.svg\";"],"sourceRoot":""}